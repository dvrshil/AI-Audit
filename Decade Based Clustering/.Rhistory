library(readxl)
data <- read_excel("~/RStudio/CS_859_Team_Project/Dec1/Drug_Consumption_data_decade.xlsx")
f_cols = c("Gender", "Country", "Ethnicity", "Alcohol", "Amphet", "Benzos", "Cannabis", "Ecstasy", "Legalh", "Nicotine")
#drugs = list("Alcohol", "Amphet", "Benzos", "Cannabis", "Ecstasy", "Legalh", "Nicotine")
data[f_cols] <- lapply(data[f_cols], factor)
data
alcohol = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Alcohol")]
amphet = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Amphet")]
benzos = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Benzos")]
cannabis = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Cannabis")]
ecstasy = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Ecstasy")]
legalh = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Legalh")]
nicotine = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Nicotine")]
f1 <- function(rf_model)
{
p = rf_model$confusion[4]/(rf_model$confusion[3]+rf_model$confusion[4])
r = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
#sp = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
#se = rf_model$confusion[1]/(rf_model$confusion[2]+rf_model$confusion[4])
score = (2*p*r)/(r+p)
sprintf('Precision: %.4f, Recall: %.4f, F1 Score: %.4f', p, r,score)
}
set.seed(365)
rf_can <- randomForest(Cannabis~.,
data = cannabis,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
library(randomForest)
set.seed(365)
rf_oh <- randomForest(Alcohol~.,
data = alcohol,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_oh)
f1(rf_oh) #Positive Class F1 Score function
varImpPlot(rf_oh)
set.seed(365)
rf_can <- randomForest(Cannabis~.,
data = cannabis,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can)
f1(rf_can) #Positive Class F1 Score function
varImpPlot(rf_can)
importance(rf_can)
set.seed(365)
rf_xt <- randomForest(Ecstasy~.,
data = ecstasy,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt)
f1(rf_xt) #Positive Class F1 Score function
varImpPlot(rf_xt)
library(randomForest)
set.seed(365)
rf_oh <- randomForest(Alcohol~.,
data = alcohol,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_oh)
f1(rf_oh) #Positive Class F1 Score function
varImpPlot(rf_oh)
set.seed(365)
rf_amp <- randomForest(Amphet~.,
data = amphet,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_amp)
f1(rf_amp) #Positive Class F1 Score function
varImpPlot(rf_amp)
set.seed(365)
rf_ben <- randomForest(Benzos~.,
data = benzos,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_ben)
f1(rf_ben) #Positive Class F1 Score function
varImpPlot(rf_ben)
set.seed(365)
rf_lh <- randomForest(Legalh~.,
data = legalh,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_lh)
f1(rf_lh) #Positive Class F1 Score function
varImpPlot(rf_lh)
set.seed(365)
rf_nic <- randomForest(Nicotine~.,
data = nicotine,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_nic)
f1(rf_nic) #Positive Class F1 Score function
varImpPlot(rf_nic)
library(readxl)
data <- read_excel("~/RStudio/CS_859_Team_Project/Dec1/Drug_Consumption_data_decade.xlsx")
f_cols = c("Gender", "Country", "Ethnicity", "Alcohol", "Amphet", "Benzos", "Cannabis", "Ecstasy", "Legalh", "Nicotine")
#drugs = list("Alcohol", "Amphet", "Benzos", "Cannabis", "Ecstasy", "Legalh", "Nicotine")
data[f_cols] <- lapply(data[f_cols], factor)
data
alcohol = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Alcohol")]
amphet = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Amphet")]
benzos = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Benzos")]
cannabis = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Cannabis")]
ecstasy = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Ecstasy")]
legalh = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Legalh")]
nicotine = data[c("Age", "Gender", "Education", "Country", "Ethnicity", "Nscore", "Escore", "Oscore", "Ascore", "Cscore", "Impulsiveness", "SS", "Nicotine")]
f1 <- function(rf_model)
{
p = rf_model$confusion[4]/(rf_model$confusion[3]+rf_model$confusion[4])
r = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
#sp = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
#se = rf_model$confusion[1]/(rf_model$confusion[2]+rf_model$confusion[4])
score = (2*p*r)/(r+p)
sprintf('Precision: %.4f, Recall: %.4f, F1 Score: %.4f', p, r,score)
}
set.seed(365)
rf_xt <- randomForest(Ecstasy~.,
data = ecstasy,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
library(randomForest)
set.seed(365)
rf_oh <- randomForest(Alcohol~.,
data = alcohol,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_oh)
f1(rf_oh) #Positive Class F1 Score function
varImpPlot(rf_oh)
set.seed(365)
rf_xt <- randomForest(Ecstasy~.,
data = ecstasy,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt)
f1(rf_xt) #Positive Class F1 Score function
varImpPlot(rf_xt)
importance(rf_xt)
