varImpPlot(rf_xt3)
set.seed(365)
rf_xt3 <- randomForest(Ecstasy~.,
data = ecstasy_top3,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt3)
f1(rf_xt3) #Positive Class F1 Score function
varImpPlot(rf_xt3)
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 2,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 3,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_xt4 <- randomForest(Ecstasy~.,
data = ecstasy_top4,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt4)
f1(rf_xt4) #Positive Class F1 Score function
varImpPlot(rf_xt4)
set.seed(365)
rf_xt4 <- randomForest(Ecstasy~.,
data = ecstasy_top4,
importance = TRUE,
mtry = 3,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt4)
f1(rf_xt4) #Positive Class F1 Score function
varImpPlot(rf_xt4)
set.seed(365)
rf_xt4 <- randomForest(Ecstasy~.,
data = ecstasy_top4,
importance = TRUE,
mtry = 2,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt4)
f1(rf_xt4) #Positive Class F1 Score function
varImpPlot(rf_xt4)
set.seed(365)
rf_xt4 <- randomForest(Ecstasy~.,
data = ecstasy_top4,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt4)
f1(rf_xt4) #Positive Class F1 Score function
varImpPlot(rf_xt4)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 2,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 3,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 5,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 5,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 4,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 3,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 2,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
# Feature Ranks for Cannabis -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
# Feature Ranks for Ecstasy -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
cannabis_top1 = data[c("Age", "Cannabis")]
library(readxl)
data <- read_excel("~/RStudio/CS_859_Team_Project/Dec1/Drug_Consumption_data_decade.xlsx")
f_cols = c("Cannabis", "Ecstasy")
#drugs = list("Cannabis", "Ecstasy")
data[f_cols] <- lapply(data[f_cols], factor)
data
# Feature Ranks for Cannabis -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
# Feature Ranks for Ecstasy -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
cannabis_top1 = data[c("Age", "Cannabis")]
ecstasy_top1 = data[c("Age", "Ecstasy")]
cannabis_top2 = data[c("Age", "SS", "Cannabis")]
ecstasy_top2 = data[c("Age", "SS", "Ecstasy")]
cannabis_top3 = data[c("Age", "Oscore", "SS", "Cannabis")]
ecstasy_top3 = data[c("Age", "Oscore", "SS", "Ecstasy")]
cannabis_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Ecstasy")]
cannabis_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Ecstasy")]
f1 <- function(rf_model)
{
p = rf_model$confusion[4]/(rf_model$confusion[3]+rf_model$confusion[4])
r = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
score = (2*p*r)/(r+p)
sprintf('Precision: %.4f, Recall: %.4f, F1 Score: %.4f', p, r,score)
}
library(randomForest)
set.seed(365)
rf_can1 <- randomForest(Cannabis~.,
data = cannabis_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can1)
f1(rf_can1) #Positive Class F1 Score function
#varImpPlot(rf_can1) #ranking invalid
set.seed(365)
rf_xt1 <- randomForest(Ecstasy~.,
data = ecstasy_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt1)
f1(rf_xt1) #Positive Class F1 Score function
#varImpPlot(rf_xt1) #ranking invalid
set.seed(365)
rf_xt2 <- randomForest(Ecstasy~.,
data = ecstasy_top2,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt2)
f1(rf_xt2) #Positive Class F1 Score function
varImpPlot(rf_xt2)
### 1. Importing the data and helper function(s)
```{r}
### 1. Importing the data and helper function(s)
library(readxl)
data <- read_excel("~/RStudio/CS_859_Team_Project/Dec1/Drug_Consumption_data_decade.xlsx")
f_cols = c("Cannabis", "Ecstasy")
#drugs = list("Cannabis", "Ecstasy")
data[f_cols] <- lapply(data[f_cols], factor)
data
# Feature Ranks for Cannabis -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
# Feature Ranks for Ecstasy -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
cannabis_top1 = data[c("Age", "Cannabis")]
ecstasy_top1 = data[c("Age", "Ecstasy")]
cannabis_top2 = data[c("Age", "SS", "Cannabis")]
ecstasy_top2 = data[c("Age", "SS", "Ecstasy")]
cannabis_top3 = data[c("Age", "Oscore", "SS", "Cannabis")]
ecstasy_top3 = data[c("Age", "Oscore", "SS", "Ecstasy")]
cannabis_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Ecstasy")]
cannabis_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Ecstasy")]
f1 <- function(rf_model)
{
p = rf_model$confusion[4]/(rf_model$confusion[3]+rf_model$confusion[4])
r = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
score = (2*p*r)/(r+p)
sprintf('Precision: %.4f, Recall: %.4f, F1 Score: %.4f', p, r,score)
}
### 2. Top 1 Features
library(randomForest)
set.seed(365)
rf_can1 <- randomForest(Cannabis~.,
data = cannabis_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can1)
f1(rf_can1) #Positive Class F1 Score function
#varImpPlot(rf_can1) #ranking invalid
set.seed(365)
rf_xt1 <- randomForest(Ecstasy~.,
data = ecstasy_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt1)
f1(rf_xt1) #Positive Class F1 Score function
#varImpPlot(rf_xt1) #ranking invalid
### 3. Top 2 Features
set.seed(365)
rf_can2 <- randomForest(Cannabis~.,
data = cannabis_top2,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can2)
f1(rf_can2) #Positive Class F1 Score function
varImpPlot(rf_can2)
set.seed(365)
rf_xt2 <- randomForest(Ecstasy~.,
data = ecstasy_top2,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt2)
f1(rf_xt2) #Positive Class F1 Score function
varImpPlot(rf_xt2)
```
### 1. Importing the data and helper function(s)
library(readxl)
data <- read_excel("~/RStudio/CS_859_Team_Project/Dec1/Drug_Consumption_data_decade.xlsx")
f_cols = c("Cannabis", "Ecstasy")
#drugs = list("Cannabis", "Ecstasy")
data[f_cols] <- lapply(data[f_cols], factor)
data
# Feature Ranks for Cannabis -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
# Feature Ranks for Ecstasy -> 1:Age, 2:SS, 3:Oscore, 4:Cscore, 5:Nscore
cannabis_top1 = data[c("Age", "Cannabis")]
ecstasy_top1 = data[c("Age", "Ecstasy")]
cannabis_top2 = data[c("Age", "SS", "Cannabis")]
ecstasy_top2 = data[c("Age", "SS", "Ecstasy")]
cannabis_top3 = data[c("Age", "Oscore", "SS", "Cannabis")]
ecstasy_top3 = data[c("Age", "Oscore", "SS", "Ecstasy")]
cannabis_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top4 = data[c("Age", "Oscore", "Cscore", "SS", "Ecstasy")]
cannabis_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Cannabis")]
ecstasy_top5 = data[c("Age", "Nscore", "Oscore", "Cscore", "SS", "Ecstasy")]
f1 <- function(rf_model)
{
p = rf_model$confusion[4]/(rf_model$confusion[3]+rf_model$confusion[4])
r = rf_model$confusion[4]/(rf_model$confusion[2]+rf_model$confusion[4])
score = (2*p*r)/(r+p)
sprintf('Precision: %.4f, Recall: %.4f, F1 Score: %.4f', p, r,score)
}
### 2. Top 1 Features
library(randomForest)
set.seed(365)
rf_can1 <- randomForest(Cannabis~.,
data = cannabis_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can1)
f1(rf_can1) #Positive Class F1 Score function
#varImpPlot(rf_can1) #ranking invalid
set.seed(365)
rf_xt1 <- randomForest(Ecstasy~.,
data = ecstasy_top1,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt1)
f1(rf_xt1) #Positive Class F1 Score function
#varImpPlot(rf_xt1) #ranking invalid
### 3. Top 2 Features
set.seed(365)
rf_can2 <- randomForest(Cannabis~.,
data = cannabis_top2,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can2)
f1(rf_can2) #Positive Class F1 Score function
varImpPlot(rf_can2)
set.seed(365)
rf_xt2 <- randomForest(Ecstasy~.,
data = ecstasy_top2,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt2)
f1(rf_xt2) #Positive Class F1 Score function
varImpPlot(rf_xt2)
### 4. Top 3 Features
set.seed(365)
rf_can3 <- randomForest(Cannabis~.,
data = cannabis_top3,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can3)
f1(rf_can3) #Positive Class F1 Score function
varImpPlot(rf_can3)
set.seed(365)
rf_xt3 <- randomForest(Ecstasy~.,
data = ecstasy_top3,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt3)
f1(rf_xt3) #Positive Class F1 Score function
varImpPlot(rf_xt3)
### 5. Top 4 Features
set.seed(365)
rf_can4 <- randomForest(Cannabis~.,
data = cannabis_top4,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can4)
f1(rf_can4) #Positive Class F1 Score function
varImpPlot(rf_can4)
set.seed(365)
rf_xt4 <- randomForest(Ecstasy~.,
data = ecstasy_top4,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt4)
f1(rf_xt4) #Positive Class F1 Score function
varImpPlot(rf_xt4)
### 6. Top 5 Features
set.seed(365)
rf_can5 <- randomForest(Cannabis~.,
data = cannabis_top5,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_can5)
f1(rf_can5) #Positive Class F1 Score function
varImpPlot(rf_can5)
set.seed(365)
rf_xt5 <- randomForest(Ecstasy~.,
data = ecstasy_top5,
importance = TRUE,
mtry = 1,
ntree = 1000,
CUTOFF = .6,
verbose = TRUE)
print(rf_xt5)
f1(rf_xt5) #Positive Class F1 Score function
varImpPlot(rf_xt5)
